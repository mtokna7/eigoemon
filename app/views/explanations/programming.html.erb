<h1>Explanations#programming</h1>

<% if @user_quiz_history.is_correct %>
  <h2>Fantastic! You got it right! See the explanation below.</h2>
<% else %>
  <h2>Almost there! Check out the explanation below to understand better.</h2>
<% end %>

<h3>こたえは <% parts = @word.parts %></h3>
<%= parts[:first_part] %>
<% if parts[:bold_part] %>
  <strong class="font-bold tect-red-500"><%= parts[:bold_part] %></strong>
<% end %>
<%= parts[:last_part] %>


<h3>プログラミングではこんなふうに使うよ</h3>
  <p><%= @word.programming_explanation %></p>

<h3>ここにyouglishAPI</h3>
<h1><%= @word.name %></h1>
<script src="https://youglish.com/public/js/youglish.embed.min.js"></script>
<div id="youglish-player"></div>
<!-- 1. The widget will replace this <div> tag. -->
<div id="youglish-widget"></div>

<!-- Control buttons -->
<button id="play-button" class="btn btn-primary">Play</button>
<button id="pause-button" class="btn btn-secondary">Pause</button>
<button id="next-button" class="btn btn-primary">Next</button>
<button id="prev-button" class="btn btn-secondary">Previous</button>

<script>
  // 2. This code loads the widget API code asynchronously.
  var tag = document.createElement('script');
  tag.src = "https://youglish.com/public/emb/widget.js";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates a widget after the API code downloads.
  var widget;
  function onYouglishAPIReady(){
    widget = new YG.Widget("youglish-widget", {
      width: 350,
      components:9, //search box & caption 
      autoStart: 1, // Disable autoplay
      events: {
        'onFetchDone': onFetchDone,
        'onVideoChange': onVideoChange,
        'onCaptionConsumed': onCaptionConsumed
      }          
    });
    // 4. process the query
    widget.fetch("<%= @word.name %>","english", "us");
  }

  var views = 0, curTrack = 0, totalTracks = 0;

  // 5. The API will call this method when the search is done
  function onFetchDone(event){
    if (event.totalResult === 0)   alert("No result found");
    else totalTracks = event.totalResult; 
  }

  // 6. The API will call this method when switching to a new video. 
  function onVideoChange(event){
    curTrack = event.trackNumber;
    views = 0;
  }

  // 7. The API will call this method when a caption is consumed. 
  function onCaptionConsumed(event){
    if (++views < 3)
      widget.replay();
    else 
      if (curTrack < totalTracks)  
        widget.next();
  }

  // Control button event listeners
  document.getElementById('play-button').addEventListener('click', function() {
    widget.play();
  });

  document.getElementById('pause-button').addEventListener('click', function() {
    widget.pause();
  });

  document.getElementById('next-button').addEventListener('click', function() {
    widget.next();
  });

  document.getElementById('prev-button').addEventListener('click', function() {
    widget.previous();
  });
</script>

<%= link_to 'もう1問！', quiz_path(Quiz.all.pluck(:id).sample), class: 'btn btn-primary' %>
<%= link_to 'Topへ戻る', root_path, class: 'btn btn-secondary' %>
<%= link_to 'メモする','#', class: 'btn btn-thrdry' %>
